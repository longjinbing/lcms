<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljb.dao.ApiCategoryDao">
    <update id="updateBatch" parameterType="java.util.List">>
        <foreach item="item" index="index" collection="list" separator=";">
            update health_category
            <set>
                <if test="item.id != null">`id` =
                    #{item.id} ,
                </if>
                <if test="item.name != null">`name` =
                    #{item.name} ,
                </if>
                <if test="item.remark != null">`remark` =
                    #{item.remark} ,
                </if>
                <if test="item.createTime != null">`create_time` =
                    #{item.createTime} ,
                </if>
                <if test="item.createId != null">`create_id` =
                    #{item.createId} ,
                </if>
                <if test="item.isDelete != null">`is_delete` =
                    #{item.isDelete} ,
                </if>
                <if test="item.status != null">`status` =
                    #{item.status} ,
                </if>
                <if test="item.updateTime != null">`update_time` =
                    #{item.updateTime} ,
                </if>
                <if test="item.updateId != null">`update_id` =
                    #{item.updateId}
                </if>
            </set>
            where `id` = #{item.id}
        </foreach>
    </update>

    <select id="selectMapById" resultMap="DetailsMap">
        SELECT
                t.`id` ,            t.`name` ,            t.`remark` ,            t.`create_time` ,            t.`create_id` ,            t.`is_delete` ,            t.`status` ,            t.`update_time` ,            t.`update_id`                     ,s.`username` as createName,
        s2.`username` as updateName
        FROM health_category t left join sys_user s on s.`id`= t.`create_id` LEFT JOIN sys_user s2 ON s2.`id`=t.`update_id`
                 WHERE
                 t.`is_delete`=1 and
                  t.`id`=#{id}
    </select>

    <select id="selectMapList" parameterType="map" resultMap="listResultMap">
        SELECT
        t.`id` , t.`name` , t.`remark`
        FROM health_category t
        <where>
            <if test="field != null and search != null">
                t.`${field}` LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test="stime != null and etime != null">
                and t.`create_time` BETWEEN #{stime} AND #{etime}
            </if>
            <if test=" offset != null ">
                and t.`is_delete`=1 and t.`status`=1
            </if>
        </where>
        <choose>
            <when test="sort != null and order != null">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY id DESC
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT ${offset}, ${limit}
        </if>
    </select>

    <select id="selectTotal" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM health_category
        <where>
            <if test="field != null and search != null">
                #{field} LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test=" offset != null ">
                and `is_delete`=1 and `status`=1
            </if>
        </where>
    </select>

    <select id="recyleMapList" parameterType="map" resultMap="listResultMap">
        SELECT
        t.`id` , t.`name` , t.`remark` , t.`create_time` , t.`create_id` , t.`is_delete` , t.`status` , t.`update_time`
        , t.`update_id` ,s.`username` as updateName
        FROM health_category t left join sys_user s on s.`id`= t.`update_id`
        <where>
            <if test="field != null and search != null">
                t.`${field}` LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test="stime != null and etime != null">
                and t.`create_time` BETWEEN #{stime} AND #{etime}
            </if>
            <if test=" offset != null ">
                and t.`is_delete`=0
            </if>
        </where>
        <choose>
            <when test="sort != null and order != null">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY id DESC
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT ${offset}, ${limit}
        </if>
    </select>

    <select id="recyleTotal" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM health_category
        <where>
            <if test="field != null and search != null">
                #{field} LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test=" offset != null ">
                and `is_delete`=0
            </if>
        </where>
    </select>

    <delete id="physicsDeleteBatch">
        delete from health_category where id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="emptyRecyle">
        delete from health_category where is_delete=0
    </delete>

    <delete id="deleteBatch">
        update health_category set t.`is_delete`=0
        where id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <resultMap type="map" id="DetailsMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="createId" column="create_id"/>
        <result property="isDelete" column="is_delete"/>
        <result property="status" column="status"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateId" column="update_id"/>
        <result property="updateName" column="updateName"/>
        <result property="createName" column="createName"/>
    </resultMap>

    <resultMap type="map" id="listResultMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="remark" column="remark"/>
        <result property="status" column="status"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateName" column="updateName"/>
    </resultMap>

    <resultMap type="com.ljb.entity.ApiCategory" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="createId" column="create_id"/>
        <result property="isDelete" column="is_delete"/>
        <result property="status" column="status"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateId" column="update_id"/>
    </resultMap>

    <sql id="Base_Column_List">
	    `id`,    	    `name`,    	    `remark`,    	    `create_time`,    	    `create_id`,    	    `is_delete`,    	    `status`,    	    `update_time`,    	    `update_id`      	</sql>

</mapper>
