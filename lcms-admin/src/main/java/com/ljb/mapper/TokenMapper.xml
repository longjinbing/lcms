<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljb.dao.TokenDao">
    <cache-ref namespace="com.ljb.dao.TokenDao"></cache-ref>
    <update id="updateByIdSelective" parameterType="com.ljb.entity.Token">
        update sys_token
        <set>
            <if test="expireTime != null">
                `expire_time` = #{expireTime},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="ticket != null">
                `ticket` = #{ticket},
            </if>
            <if test="createId != null">
                `create_id` = #{createId},
            </if>
            <if test="remark != null">
                `remark` = #{remark},
            </if>
            <if test="ip != null">
                `ip` = #{ip},
            </if>
            <if test="principle != null">
                `principle` = #{principle},
            </if>
            <if test="isDelete != null">
                `is_delete` = #{isDelete}
            </if>
        </set>
        where id = #{id}
    </update>
    <insert id="saveBatch" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
        INSERT INTO sys_token
        (
        `id` ,
        `expire_time` ,
        `create_time` ,
        `ticket` ,
        `create_id` ,
        `remark` ,
        `ip` ,
        `principle` ,
        `is_delete` )
        values
        <foreach item="item" index="index" collection="list"
                 separator=",">
            (
            #{item.id},
            #{item.expireTime},
            #{item.createTime},
            #{item.ticket},
            #{item.createId},
            #{item.remark},
            #{item.ip},
            #{item.principle},
            #{item.isDelete} )
        </foreach>
    </insert>

    <update id="updateBatch" parameterType="java.util.List">>
        <foreach item="item" index="index" collection="list" separator=";">
            update sys_token
            <set>
                <if test="item.id != null">`id` =
                    #{item.id} ,
                </if>
                <if test="item.expireTime != null">`expire_time` =
                    #{item.expireTime} ,
                </if>
                <if test="item.createTime != null">`create_time` =
                    #{item.createTime} ,
                </if>
                <if test="item.ticket != null">`ticket` =
                    #{item.ticket} ,
                </if>
                <if test="item.createId != null">`create_id` =
                    #{item.createId} ,
                </if>
                <if test="item.remark != null">`remark` =
                    #{item.remark} ,
                </if>
                <if test="item.ip != null">`ip` =
                    #{item.ip} ,
                </if>
                <if test="item.principle != null">`principle` =
                    #{item.principle} ,
                </if>
                <if test="item.isDelete != null">`is_delete` =
                    #{item.isDelete}
                </if>
            </set>
            where `id` = #{item.id}
        </foreach>
    </update>

    <select id="selectMapById" resultMap="DetailsMap">
        SELECT
                t.`id` ,            t.`expire_time` ,            t.`create_time` ,            t.`ticket` ,            t.`create_id` ,            t.`remark` ,            t.`ip` ,            t.`principle` ,            t.`is_delete`    ,s.`username` as createName
        FROM sys_token t left join sys_user s on s.`id`= t.`create_id`
                 WHERE
                 t.`is_delete`=1 and
                  t.`id`=#{id}
    </select>

    <select id="selectMapList" parameterType="map" resultMap="listResultMap">
        SELECT
        t.`id` , t.`expire_time` , t.`create_time` , t.`ticket` , t.`create_id` , t.`remark` , t.`ip` , t.`principle` ,
        t.`is_delete` ,s.`username` as createName
        FROM sys_token t left join sys_user s on s.`id`= t.`create_id`
        <where>
            <if test="field != null and search != null">
                t.`${field}` LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test="stime != null and etime != null">
                and t.`create_time` BETWEEN #{stime} AND #{etime}
            </if>
            <if test=" offset != null ">
                and t.`is_delete`=1
            </if>
        </where>
        <choose>
            <when test="sort != null and order != null">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY id DESC
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT ${offset}, ${limit}
        </if>
    </select>

    <select id="selectTotal" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM sys_token
        <where>
            <if test="field != null and search != null">
                #{field} LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test=" offset != null ">
                and `is_delete`=1
            </if>
        </where>
    </select>

    <select id="recyleMapList" parameterType="map" resultMap="listResultMap">
        SELECT
        t.`id` , t.`expire_time` , t.`create_time` , t.`ticket` , t.`create_id` , t.`remark` , t.`ip` , t.`principle` ,
        t.`is_delete` ,s.`username` as updateName
        FROM sys_token t left join sys_user s on s.`id`= t.`update_id`
        <where>
            <if test="field != null and search != null">
                t.`${field}` LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test="stime != null and etime != null">
                and t.`create_time` BETWEEN #{stime} AND #{etime}
            </if>
            <if test=" offset != null ">
                and t.`is_delete`=0
            </if>
        </where>
        <choose>
            <when test="sort != null and order != null">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY id DESC
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT ${offset}, ${limit}
        </if>
    </select>

    <select id="recyleTotal" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM sys_token
        <where>
            <if test="field != null and search != null">
                #{field} LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test=" offset != null ">
                and `is_delete`=0
            </if>
        </where>
    </select>

    <delete id="physicsDeleteBatch">
        delete from sys_token where id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="emptyRecyle">
        delete from sys_token where is_delete=0
    </delete>

    <delete id="deleteBatch">
        update sys_token set t.`is_delete`=0
        where id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <resultMap type="map" id="DetailsMap">
        <result property="id" column="id"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
        <result property="ticket" column="ticket"/>
        <result property="createId" column="create_id"/>
        <result property="remark" column="remark"/>
        <result property="ip" column="ip"/>
        <result property="principle" column="principle"/>
        <result property="isDelete" column="is_delete"/>
        <result property="updateName" column="updateName"/>
        <result property="createName" column="createName"/>
    </resultMap>

    <resultMap type="map" id="listResultMap">
        <result property="id" column="id"/>
        <result property="expireTime" column="expire_time"/>
        <result property="ticket" column="ticket"/>
        <result property="remark" column="remark"/>
        <result property="ip" column="ip"/>
        <result property="principle" column="principle"/>
        <result property="createTime" column="create_time"/>
        <result property="createName" column="createName"/>
    </resultMap>

    <resultMap type="com.ljb.entity.Token" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
        <result property="ticket" column="ticket"/>
        <result property="createId" column="create_id"/>
        <result property="remark" column="remark"/>
        <result property="ip" column="ip"/>
        <result property="principle" column="principle"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>

    <sql id="Base_Column_List">
	    `id`,    	    `expire_time`,    	    `create_time`,    	    `ticket`,    	    `create_id`,    	    `remark`,    	    `ip`,    	    `principle`,    	    `is_delete`      	</sql>

</mapper>
